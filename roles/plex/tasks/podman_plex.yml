# configure plex
#
---
- name: create container directories for plex
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: '0755'
    state: directory
  with_items:
    - "{{ containers_path }}/{{ app_name }}/config"
    - "{{ containers_path }}/{{ app_name }}/transcode"

- name: stop container-plex if it exists
  become_user: "{{ app_user }}"
  ansible.builtin.systemd:
    name: "container-{{ app_name }}"
    daemon-reload: true
    enabled: true
    state: stopped
    scope: user
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ app_uid }}"
  register: app_stop_result
  failed_when: "app_stop_result is failed and 'Could not find the requested service container-' not in app_stop_result.msg"

  # ref: https://hub.docker.com/r/plexinc/pms-docker/
  # image does not support keep-id, s6's abc user perms error s6-setuidgid
- name: setup plex container plexpass
  become_user: "{{ app_user }}"
  containers.podman.podman_container:
    recreate: false
    name: "{{ app_name }}"
    hostname: "{{ hostname }}"
    image: docker.io/plexinc/pms-docker:plexpass
    ports:
      - "{{ app_port }}:32400/tcp"
    volumes:
      - "{{ containers_path }}/{{ app_name }}/config:/config:Z"
      - "{{ containers_path }}/{{ app_name }}/transcode:/transcode:Z"
      - "{{ media_path }}:/mnt/media:ro"
    # hardware acceleration
    device:
      - '/dev/dri:/dev/dri'
    cpus: "{{ cpu_core_limit }}"
    memory: "{{ memory_limit }}"
    env:
      ADVERTISE_IP: "http://{{ host_ip_address }}:{{ app_port }}/"
      PLEX_CLAIM: "{{ plex_claim }}"
      PLEX_UID: "{{ app_uid }}"
      PLEX_GID: "{{ app_gid }}"
      TZ: "{{ timezone }}"
    state: present
    generate_systemd: {"path": "/home/{{ app_user }}/.config/systemd/user"}
  register: container_state

- name: debug plex podman
  ansible.builtin.debug:
    msg: "{{ container_state }}"
  when: verbose

- name: enable and start plex
  become_user: "{{ app_user }}"
  ansible.builtin.systemd:
    daemon-reload: true
    name: "container-{{ app_name }}"
    enabled: true
    state: started
    scope: user
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ app_uid }}"
    #  when: container_state.changed
  register: app_systemctl_debug

- name: debug plex podman
  ansible.builtin.debug:
    msg: "{{ app_systemctl_debug }}"
  when: verbose

- name: wait for first start to settle
  ansible.builtin.uri:
    url: "http://127.0.0.1:{{ app_port }}/web"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 720  # 720 * 5 = 1 hour
  delay: 5

- name: user crontab restart plex container weekly to autoupdate
  become_user: "{{ app_user }}"
  ansible.builtin.cron:
    name: restart container to force updates
    minute: "5"
    hour: "4"
    weekday: "5"
    job: "/usr/bin/sh -c '/usr/bin/podman stop plex && sleep 20 && /usr/bin/podman start plex'"

- name: user crontab backup confg directory weekly
  become_user: root
  ansible.builtin.cron:
    name: plex - backup config directory weekly
    minute: "45"
    hour: "7"
    weekday: "3"
    job: "/usr/bin/tar czvf /mnt/media/staging/plex-weekly-config-backup.tar.gz /mnt/containers/plex/config"
