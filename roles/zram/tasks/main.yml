# zram/tasks/main.yml
#
# Edit swap file settings and install zram
#
# zRAM kernel module
# https://scatterpated.net/?p=69
# https://wiki.archlinux.org/title/Zram
#
# zRAM is a kernel module which creates swapspace in compressed RAM. The speed
# benefits of having swapspace in RAM far outweigh the minor cost of compression
# in CPU cycles.
---
- name: check if systemd zram.service file exists
  ansible.builtin.stat:
    path: /etc/systemd/system/zram.service
  register: zram_systemd_check

- name: comment out swap UUIDs
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: '(^UUID.*swap.*)'
    # starts with UUID and has swap in line
    line: '# \1'
    backrefs: true
    state: present

- name: comment out swap lvs
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: '(^/dev/mapper.*swap.*)'
    # line starts with dev/mapper and has swap in line
    line: '# \1'
    backrefs: true
    state: present

- name: update rpi2b dphys-swapfile file size
  ansible.builtin.lineinfile:
    path: /etc/dphys-swapfile
    regexp: '^CONF_SWAPSIZE=100$'
    line: 'CONF_SWAPSIZE=512'
  when: ansible_facts.machine == "armv7l"

- name: check for swap file
  ansible.builtin.stat:
    path: /var/swap
  register: swapfile_check

- name: create file for swap
  ansible.builtin.command:
    cmd: fallocate -l {{ zram_swapfile_size }} /var/swap
  when: not swapfile_check.stat.exists

- name: set permissions on swapfile
  ansible.builtin.file:
    path: /var/swap
    mode: '0600'
  when: not swapfile_check.stat.exists

- name: config file as swapfile
  ansible.builtin.command:
    cmd: mkswap /var/swap
  when: not swapfile_check.stat.exists

- name: enable swapfile
  ansible.builtin.command:
    cmd: swapon -p 1 /var/swap
  when: not swapfile_check.stat.exists

- name: add swapfile to fstab
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: ^(?=.*UUID)(?=.*swap).*$
    # search any UUID + any swap, select line
    line: "/var/swap     none    swap    sw,pri=1   0 0"
  when: not swapfile_check.stat.exists

- name: install modules-load.d file
  ansible.builtin.copy:
    src: modules-load.d/zram.conf
    dest: /etc/modules-load.d/zram.conf
    owner: root
    group: root
    mode: '0644'

- name: install modprobeb.d file
  ansible.builtin.copy:
    src: modprobe.d/zram.conf
    dest: /etc/modprobe.d/zram.conf
    owner: root
    group: root
    mode: '0644'

- name: install rules.d template
  ansible.builtin.template:
    src: templates/rules.d/99-zram.rules.j2
    dest: /etc/udev/rules.d/99-zram.rules
    owner: root
    group: root
    mode: '0644'
  notify: restart system

- name: install systemd file
  ansible.builtin.copy:
    src: systemd/zram.service
    dest: /etc/systemd/system/zram.service
    owner: root
    group: root
    mode: '0644'

- name: enable zram on next restart
  ansible.builtin.service:
    name: zram
    enabled: true
  notify: restart system
